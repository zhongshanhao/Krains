(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{547:function(t,e,s){"use strict";s.r(e);var n=s(4),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("socket是在应用层和传输层之间的一个抽象层，它把TCP/IP层复杂的操作抽象为几个简单的接口供应用层调用以实现进程在网络中通信。通过socket提供的接口，我们可以很方便的使用TCP/IP协议进行网络间进程的通信。")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"D:\\_temp\\网络图片\\aHR0cDovL2ltYWdlcy5jbml0YmxvZy5jb20vYmxvZy8zNDkyMTcvMjAxMzEyLzA1MjI1NzIzLTJmZmE4OWFhZDkxZjQ2MDk5YWZhNTMwZWY4NjYwYjIwLmpwZw.jpg",alt:"aHR0cDovL2ltYWdlcy5jbml0YmxvZy5jb20vYmxvZy8zNDkyMTcvMjAxMzEyLzA1MjI1NzIzLTJmZmE4OWFhZDkxZjQ2MDk5YWZhNTMwZWY4NjYwYjIwLmpwZw"}}),t._v(" "),s("p",[t._v("套接字Socket=（IP地址：端口号），套接字的表示方法是点分十进制的lP地址后面写上端口号，中间用冒号或逗号隔开。")]),t._v(" "),s("p",[t._v("每一个传输层连接唯一地被通信两端的两个端点（即两个套接字）所确定。例如：如果IP地址是210.37.145.1，而端口号是23，那么得到套接字就是(210.37.145.1:23)  。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 两个socket确定一个传输层的连接\n// 因此一台主机最大连接数不是端口数，只要socket其中一个参数不相同，就可以是一个不同的连接\n\nsocket(ip:端口)   -----   socket(ip:端口)  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("端口是一个逻辑上的概念，不是物理上真正有一个端口，实际网络传输数据走的都是IO，在linux中，一个进程创建了一个socket套接字，就相当于创建了一个文件，用这个文件表示抽象的socket")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000010838127",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux下Socket通信（TCP实现）"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("socket建立连接过程")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"D:\\_temp\\网络图片\\20180301101458901.png",alt:"20180301101458901"}})])}),[],!1,null,null,null);e.default=a.exports}}]);